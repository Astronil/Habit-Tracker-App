var e=globalThis,t={},r={},i=e.parcelRequire94c2;null==i&&((i=function(e){if(e in t)return t[e].exports;if(e in r){var i=r[e];delete r[e];var a={id:e,exports:{}};return t[e]=a,i.call(a.exports,a,a.exports),a.exports}var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}).register=function(e,t){r[e]=t},e.parcelRequire94c2=i),(0,i.register)("ku4mm",function(e,t){Object.defineProperty(e.exports,"BiometricAuth",{get:()=>n,set:void 0,enumerable:!0,configurable:!0});var r=i("gdelx"),a=i("6AR8M");let o=(0,r.getDatabase)();class n{constructor(){this.available=!1,this.init()}async init(){try{if(!window.PublicKeyCredential){console.log("WebAuthn is not supported in this browser");return}this.available=await PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable()}catch(e){console.error("Error initializing biometric authentication:",e),this.available=!1}}async register(e,t,i,a){if(!this.available)throw Error("Biometric authentication is not available");try{if(console.log("Email:",i),console.log("Password:",a),!i||!a)throw Error("Email or password is missing");let n=new TextEncoder().encode(e),l={challenge:new Uint8Array(32),rp:{name:"Habit Tracker",id:window.location.hostname},user:{id:n,name:t,displayName:t},pubKeyCredParams:[{type:"public-key",alg:-7}],authenticatorSelection:{authenticatorAttachment:"platform",userVerification:"required"},timeout:6e4},s=await navigator.credentials.create({publicKey:l}),c=btoa(String.fromCharCode(...new Uint8Array(s.rawId)));return await (0,r.set)((0,r.ref)(o,`biometricCredentials/${e}`),{credentialId:c,uid:e,email:i,password:a,timestamp:Date.now()}),console.log("Biometric credentials and user info saved successfully"),!0}catch(e){throw console.error("Error registering biometric:",e),e}}async authenticate(e){if(!this.available)throw Error("Biometric authentication is not available");try{let t=await (0,r.get)((0,r.ref)(o,`biometricCredentials/${e}`));if(!t.exists())throw Error("No registered biometric credentials found");let i=t.val(),n=Uint8Array.from(atob(i.credentialId),e=>e.charCodeAt(0)),l=this.generateChallenge();if(!await navigator.credentials.get({publicKey:{challenge:l,allowCredentials:[{id:n,type:"public-key"}],userVerification:"required",timeout:6e4}}))return console.error("Biometric authentication failed"),!1;{let{email:e,password:t}=i,r=(0,a.getAuth)();return await (0,a.signInWithEmailAndPassword)(r,e,t),console.log("User successfully authenticated with Firebase."),sessionStorage.getItem("redirected")||(sessionStorage.setItem("redirected","true"),window.location.href="index.html"),!0}}catch(e){throw console.error("Error authenticating with biometric:",e),e}}generateChallenge(){return new Uint8Array(32)}}window.BiometricAuth=n}),i("ku4mm");
//# sourceMappingURL=index.3e1f9f21.js.map
